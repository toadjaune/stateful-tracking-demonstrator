<h2>What is stateful tracking ?</h2>

<p>There is a lot of ways for a website to recognized an user but we can set up two categories :<p>
<ul>
  <li> Stateless tracking </li>
  <li> Stateful tracking </li>
</ul>

<h3> Stateless tracking </h3>
<p>
The tracking methods under this category is about fetching the characteristics of your browser and your device to distinguish one user from an another. It is called fingerprinting. This is outside the scope of this website but we recommand you to look at websites like <a href="https://panopticlick.eff.org/" target="_blank">Panopticlick</a> or <a href="https://amiunique.org/" target="_blank">Am I Unique?</a> which covers this subjet well more than us.
</p>

<h3> Stateful tracking </h3>
<p>
Here, the tracking is about making the browser store informations when setting up the tracker and then getting them back to identify the user. The most known way to do that is the <a href="https://en.wikipedia.org/wiki/HTTP_cookie" target="_blank">cookie</a> which can be, and actually sometimes is, used for legitimate purposes allowing Single Sign-On (like <i>Connect with Facebook</i>) to work or remembering preferences, but is also massivly used for tracking users. Since its creation around 1995, the public has been alerted about privacy issues coming from cookies and some others way to make the browser store informations for tracking purposes has been found and used, mostly for advertising.
</p>

<h2> Why should I care ?</h2>

<p>
Pros and cons of tracking has already been said and repeated so we can suggest you a couple of online ressources you can consult to make your choice. 
</p>
<ul>
  <li> <a href="https://www.eff.org/issues/privacy" target="_blank">The Electronic Frontier Fondation website</a> </li>
  <li> <a href="https://ellajdesigns.com/tracking-web-analytics/" target="_blank">Explaination of the business consequences of analytics</a>
</ul>

<p>
However, tracking is done without notifying the user being tracked (<i>you</i>) which is problematic. While it should the user's choice if he wants to be tracked or not, we have constated that the general public is not aware of how the tracking is done and how to protect oneself against it. Ultimately, we give you the tools to choose. 
</p>

<h2>I have desactived cookies on my brower, so I should be okay ?</h2>
<p> Here is a list of common means for a website to track you: </p>
<ul>
  <li> Cookies </li>
  <li> Local Storage </li>
  <li> HSTS Cache </li>
  <li> ETag caching </li>
  <li> Redirection caching </li>
  <li> Cookies syncing </li>
</ul>

<p> As you can see, there is a lot of means not relying on cookies which means you can still be tracked. Furthermore, only one way is relying on Javascript so even usage of plugins like <a href="https://noscript.net/" target="_blank">NoScript</a> is not enough to protect you. </p>

<h2> I did not understand a single thing in your list !</h2>

<p>
Do not worry, we got you covered. here comes an explanation of each item:
</p>

<h3>Cookies</h3>

<p>
Cookies are stored with the website name that deposited them and a browser only send to a website cookies deposited by it. However, a website can include externals ressources that can set and fetch cookies. We distinguish <strong>first-party cookies</strong> that are set by the website you are actually visiting and the <strong>third-party cookies</strong> that originate from ressources included by 
the website from outside its server. While <strong>first-party</strong> are usually used to store user preferences (like language or session identifiant), <strong>third-party cookies</strong> are in a overwhelmingly used for tracking purposes.
</p>

<p>
Websites can manipulate cookies with two ways : HTTP headers and Javascript. User browser can refuse them at any time. You can install browser extensions to protect yourself against this :
</p>
<ul>
  <li> <a href="https://chrome.google.com/webstore/detail/editthiscookie/fngmhnnpilhplaeedifhccceomclgfbg" target="_blank">Extension for Chrome</a> </li>
  <li> <a href="https://addons.mozilla.org/en-US/firefox/addon/self-destructing-cookies-1/" target="_blank">Extension for Firefox</a> </li>
</ul>

If you want to know more about cookies, we can advise you to consult this <a href="https://en.wikipedia.org/wiki/HTTP_cookie" target="_blank">Wikipedia article</a>.

<h3>Local storage</h3>

<p>
Local Storage has been created in reaction of the cookie system. The improvements are :
</p>
<ul>
  <li> More space for storage </li>
  <li> Better privacy and lower bandwidth usage since it is never send to server </li>
  <li> Storage is well compartimented, which was not the default for cookies </li>
</ul>

<p>
The major drawback is that Local Storage is only available from browser thus making Javascript, or any other way to execute code client-side like Java applet or Flash, mandatory.
</p>

<p>
Some browsers like Safari disable the use of Local Storage when used on incognito, sometimes named private, mode. You can also desactivate or restrict Javascript usage with browser settings or extensions like the following to prevent the use of this method :
</p>
<ul>
  <li><a href="https://noscript.net/" target="_blank">NoScript</a></li>
  <li><a href="https://github.com/gorhill/uMatrix" target="_blank">uMatrix</a></li>
</ul>

<h3>HSTS Cache</h3>

<p>
HSTS, for Http Strict Transport Security, is a option websites can enable to make sure users access their website with the secure version of HTTP. The first time an user access their website, the server informs the browser that it should be accessed only with the HTTPS protocole and the browser is storing that information to ensure it won't use the insecure channel.
</p>

<p>
However, some tracking companies abuses this fact by issuing a number of domains and telling every user that a different subset of them are HTTPS-only with HSTS and can check with subset is accessed by the client with the secure version and which is not thus identifying the client.
</p>

<p>
Sadly, there is currently no countermesure against this method apart a complete desactivation of HSTS which is a security risk. Some proposals 
</p>

<p>
If you want to learn more, we adivse you to consult this <a href="https://www.leviathansecurity.com/blog/the-double-edged-sword-of-hsts-persistence-and-privacy">more detailed explanation</a>
</p>

<h3> ETag Caching </h3>

<p>
ETag is an option in the HTTP protocol to allow server to have a fine control over cache in order to limit bandwidth usage. When providing a ressource like an image, the server will add an header named Etag with an identifiant. Every time the client want to access that ressource, it will join the identifiant to the request so the server can check if the identifiant given by client is up to date. In this case, he will answer that the ressource has not been modified and the client can use the one in its cache. Else he will give the new version and the corresponding identifiant.
</p>

<p>
A tracking company can include a empty ressource, like a 1x1 pixel, and provide a different ETag value for each user, and using that identifiant to track user.
</p>
